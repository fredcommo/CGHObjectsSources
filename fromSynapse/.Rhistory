tmp <- fast.svd(kernLogit(sX, b = b))
sum(tmp$d)
}
)
out <- do.call(c, out)
plot(out, ylim = range(out), type = 'h', main = expression(sum(lambda)))
which.max(out)
out <- fast.svd(kernLogit(sX, b = which.max(out)))
pairs(out$u[,1:3], col = grp, main = 'Logit kernel on samples')
# pairs(pca$x[,1:3], col = c(rep('grey', p), rep('red', 50)))
probeCols <- c(rep('grey', p), rep('red', sp))
sX <- scale(as.data.frame(X))
out <- fast.svd(kernLin(sX))
pairs(out$u[,1:3], col = probeCols, main = 'Linear kernel on probs')
out <- fast.svd(kernQuad(sX, d = 2))
pairs(out$u[,1:3], col = probeCols, main = 'Quadratic kernel on probes')
D <- seq(1, 10, len = 10)
out <- lapply(D, function(d){
cat('d:', d, '\n')
tmp <- fast.svd(kernQuad(sX, d = d))
sum(tmp$d)
}
)
out <- do.call(c, out)
plot(out, ylim = range(out), type = 'h', main = expression(sum(lambda)))
D[which.max(out)]
out <- fast.svd(kernQuad(sX, d = 2))
pairs(out$u[,1:3], col = probeCols, main = 'Quadratic kernel on probes')
S <- seq(.1, 5, len = 20)
out <- lapply(S, function(s){
cat('s:', s, '\n')
tmp <- fast.svd(kernGaus(sX, s = s))
sum(tmp$d)
}
)
require(devtools)
install_github('rCharts', 'ramnathv')
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
750*3.95
1950/.79
5000*.8
5000*.78
q()
# Download R (class def & codes) from synapse
require(synapseClient)
Rfiles <- synapseQuery("select id, name from entity where parentId == 'syn2117484'")
# Source Class definitions first
code <- synGet(Rfiles$entity.id[grep('Classes', Rfiles$entity.name)])
source(code@filePath)
for(id in Rfiles$entity.id[-grep('Classes', Rfiles$entity.name)]){
cat(id, '\n')
code <- synGet(id)
source(code@filePath)
}
require(synapseClient)
Rfiles <- synapseQuery("select id, name from entity where parentId == 'syn2117484'")
# Source Class definitions first
code <- synGet(Rfiles$entity.id[grep('Classes', Rfiles$entity.name)])
source(code@filePath)
for(id in Rfiles$entity.id[-grep('Classes', Rfiles$entity.name)]){
cat(id, ':', Rfiles$entity.name[Rfiles$entity.id == id],'\n')
code <- synGet(id)
source(code@filePath)
}
listFiles <- synapseQuery("select id, name from entity where entity.parentId == 'syn2025161'")
synId <- listFiles$entity.id[1]
object1 <- buildAgilent(synId)
object2 <- adjustSignal(object1)
object3 <- EMnormalize(object2, cut = c(-0.4, 0.4), MergePeaks = TRUE)
object4 <- SegmentCGH(object3, UndoSD = .5)
object5 <- createProfile(object4)
# Check the profile before saving
getDensity(object5)
getProfile(object5, ylim = range(-1.5, 1.5))
# Save results & create a shiny App.
profile <- pushToSynapse(object5)
shiny <- buildShinyData(object5, builtFrom = profile)
# Check synapse page
onWeb(shiny)
# Download R (class def & codes) from synapse
require(synapseClient)
Rfiles <- synapseQuery("select id, name from entity where parentId == 'syn2117484'")
# Source Class definitions first
code <- synGet(Rfiles$entity.id[grep('Classes', Rfiles$entity.name)])
source(code@filePath)
for(id in Rfiles$entity.id[-grep('Classes', Rfiles$entity.name)]){
cat(id, ':', Rfiles$entity.name[Rfiles$entity.id == id],'\n')
code <- synGet(id)
source(code@filePath)
}
listFiles <- synapseQuery("select id, name from entity where entity.parentId == 'syn2025161'")
synId <- listFiles$entity.id[1]
object1 <- buildAgilent(synId)
object2 <- adjustSignal(object1)
object3 <- EMnormalize(object2, cut = c(-0.4, 0.4), MergePeaks = TRUE)
object4 <- SegmentCGH(object3)
object5 <- createProfile(object4)
# Check the profile before saving
getDensity(object5)
getProfile(object5, ylim = range(-1.5, 1.5))
require(multicore)
require(corpcor)
# Kernels:
.klin <- function(x, y){
x[!is.finite(x)] <- 0; y[!is.finite(y)] <- 0
return(t(x)%*%y)
}
.kquad <- function(x, y, d){
x[!is.finite(x)] <- 0; y[!is.finite(y)] <- 0
return(1+.klin(x, y)^d)
}
.kgaus <- function(x, y, s){
x[!is.finite(x)] <- 0; y[!is.finite(y)] <- 0
return(exp(-norm(t(x-y))^2/(2*s^2)))
}
.klogit <- function(x, y, b){
x[!is.finite(x)] <- 0; y[!is.finite(y)] <- 0
return(1/(1+exp(-(b + .klin(x, y)))))
}
# Compute kernels
kernLin <- function(A, B = NULL){
if(is.null(B)) B <- t(A)
A <- mclapply(1:nrow(A), function(i) A[i,], mc.cores = 2)
B <- mclapply(1:ncol(B), function(i) B[,i], mc.cores = 2)
out <- mclapply(1:length(A), function(i){
x <- A[[i]]
tmp <- mclapply(1:length(B), function(j){.klin(x, B[[j]])}, mc.cores = 2)
do.call(c, tmp)
}, mc.cores = 2)
return(do.call(rbind, out))
}
kernQuad <- function(A, B = NULL, d = 2){
if(is.null(B)) B <- t(A)
A <- mclapply(1:nrow(A), function(i) A[i,], mc.cores = 2)
B <- mclapply(1:ncol(B), function(i) B[,i], mc.cores = 2)
out <- mclapply(1:length(A), function(i){
x <- A[[i]]
tmp <- mclapply(1:length(B), function(j){.kquad(x, B[[j]], d)}, mc.cores = 2)
do.call(c, tmp)
}, mc.cores = 2)
return(do.call(rbind, out))
}
kernGaus <- function(A, B = NULL, s=1){
if(is.null(B)) B <- t(A)
A <- mclapply(1:nrow(A), function(i) A[i,], mc.cores = 2)
B <- mclapply(1:ncol(B), function(i) B[,i], mc.cores = 2)
out <- mclapply(1:length(A), function(i){
x <- A[[i]]
tmp <- mclapply(1:length(B), function(j){.kgaus(x, B[[j]], s)}, mc.cores = 2)
do.call(c, tmp)
}, mc.cores = 2)
return(do.call(rbind, out))
}
kernLogit <- function(A, B = NULL, b = 0){
if(is.null(B)) B <- t(A)
A <- mclapply(1:nrow(A), function(i) A[i,], mc.cores = 2)
B <- mclapply(1:ncol(B), function(i) B[,i], mc.cores = 2)
out <- mclapply(1:length(A), function(i){
x <- A[[i]]
tmp <- mclapply(1:length(B), function(j){.klogit(x, B[[j]], b)}, mc.cores = 2)
do.call(c, tmp)
}, mc.cores = 2)
return(do.call(rbind, out))
}
############################
# Trivial examples
n <- 5
p <- 10
x <- matrix(rnorm(n*p), p, n)
na <- sample(1:(n*p), (n*p)*.1)
x[na] <- NA
kernLin(x)
kernQuad(x)
kernGaus(x)
kernLogit(x)
x
kx
kx <- kernLogit(x)
solve(x)
n <- 5
p <- 5
x <- matrix(rnorm(n*p), p, n)
na <- sample(1:(n*p), (n*p)*.1)
x[na] <- NA
solve(x)
solve(x, na.rm = T)
?solve
?sparse
??sparse
install.packages('sparsem')
install.packages('SparseM')
require(SparseM)
x
solve(x)
?solve
solve(x)
SparseM.solve(x)
SparseM::solve(x)
kx
kernLogit(x)
kx <- kernLogit(x)
kx
x
x <- xi <- matrix(rnorm(n*p), p, n)
na <- sample(1:(n*p), (n*p)*.1)
x[na] <- NA
kx <- kernLogit(x)
xi
x
kx
q()
# Download R (class def & codes) from synapse
require(synapseClient)
workflow <- synGet('syn2128342')
source(workflow@filePath)
listFiles <- synapseQuery("select id, name from entity where entity.parentId == 'syn2025161'")
synId <- listFiles$entity.id[3]
object1 <- buildAgilent(synId)
object2 <- adjustSignal(object1)
object3 <- EMnormalize(object2, cut = c(-0.4, 0.4), MergePeaks = TRUE)
object4 <- SegmentCGH(object3)
object5 <- createProfile(object4)
require(shiny)
setwd("/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH")
runApp('./shinyCGHselectSample/')
synId
runApp('./shinyCGHselectSample/')
runApp('./shinyCGHselectSample/')
?runmed
Up
segTable
head(segTable)
runApp('./shinyCGHselectSample/')
head(l2r)
length(l2r)
length(gPos)
plot(gPos, runmed(l2r, k = 11),
ylim = range(-1.5, 1.5), cex = 0.1, col = 'grey20',
cex.axis = 1, cex.lab = 1.5, las = 1, mar = c(10, 10, 10, 10), mgp = c(3, 1, 0), cex.main = 1.5,
xlab = 'Genomic position', ylab = 'Log2Ratio',
main = paste(currentId, '\nGain threshold:', round(Up, 3), '- Lost threshold:', round(Lo, 3)))
lines(gPos, runmed(l2r, k = 81))
length(runmed(l2r, k = 81))
runmed(l2r, k = 81)
head(l2r)
any(is.na(l2r))
NA <- which(is.na(l2r))
NAs <- which(is.na(l2r))
NAs
runApp('./shinyCGHselectSample/')
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
# shiny tmeplates for multi-visualization on the mai results page: includes samples selection
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_server.R', parentId = parentId)
file <- synStore(file)
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
parentId <- 'syn2117484'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources')
file <- File('./loadWorkflow.R', parentId = parentId)
file <- synStore(file)
runApp('./shinyCGHselectSample/')
setwd("/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH")
runApp('./shinyCGHselectSample/')
setwd("/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH")
runApp('./shinyCGHselectSample/')
tempdir()
?readLines
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
fConn <- file(file.path(tempdir(), 'plotCGHselectSample_ui.R'), 'r+')
fConn
Lines <- readLines(fConn)
Lines[1]
Lines[2]
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
Lines
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
# Add the synId in the idsList if not on it yet.
fConn <- file(file.path(tempdir(), 'plotCGHselectSample_ui.R'), 'r+')
Lines <- readLines(fConn)
Lines
ui@filePath
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
Lines
L <- Lines[1]
L
synId
grepl('syn2121688', L)
grepl(synId, L)
gsub(')', '', L)
newTag <- sprintf('\"%s\"', synId)
newTag
gsub(')', newTag, L)
newTag <- sprintf(',\"%s\"', synId)
newTag
gsub(')', newTag, L)
!grepl(synId, Lines[1])
newTag <- sprintf('\"%s\)\n"', synId)
newTag <- sprintf('\"%s\\)\n"', synId)
newTag
newTag <- sprintf('\"%s\)\n"', synId)
newTag <- sprintf('\"%s\\\)\n"', synId)
newTag <- sprintf('\"%s\\)\n"', synId)
newTag
Lines[1]
newTag <- sprintf('\"%s\)"', synId)
newTag <- sprintf('\"%s\\\\)"', synId)
newTag
newTag <- sprintf('\"%s\")', synId)
newTag
newTag <- sprintf('\"%s\")\n', synId)
newTag
L1 <- gsub(')', newTag, Lines[1])
L1
writeLines(c(L1, Lines[-1]), con = fConn)
Lines <- readLines(fConn)
Lines
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf('\"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
Lines <- readLines(fConn)
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
Lines
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(' ,\"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
Lines
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
# Add the synId in the idsList if not on it yet.
#fConn <- file(file.path(tempdir(), 'plotCGHselectSample_ui.R'), 'r+')
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(' ,\"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
Lines
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
# Add the synId in the idsList if not on it yet.
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
Lines
ui@filePath
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
# Add the synId in the idsList if not on it yet.
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
ui@filePath
sprintf("scp %s toShiny:~/ShinyApps/shinyCGHselectSample/", ui@filePath)
profile
Profile <- pushToSynapse(object5)
Profile
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
propertyValue(Profile, 'id')
updateCommonUI <- function(synId){
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
# Add the synId in the idsList if not on it yet.
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
# Update the synapse verion
file <- File(ui@filePath, parentId = 'syn2145898')
file <- synStore(file)
# Copy the folder on the Shiny server & add the link in the wiki.
system(sprintf("scp %s toShiny:~/ShinyApps/shinyCGHselectSample/", ui@filePath))
}
updateShiny <- function(synId){
# Load the ui.R from synapse
# Add the synId in the idsList if not on it yet.
# Push to synapse, and push to the synapse.server
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
# Update the synapse verion
file <- File(ui@filePath, parentId = 'syn2145898')
file <- synStore(file)
# Copy the folder on the Shiny server & add the link in the wiki.
system(sprintf("scp %s toShiny:~/ShinyApps/shinyCGHselectSample/", ui@filePath))
}
updateShiny <- function(synId){
# Load the ui.R from synapse
# Add the synId in the idsList if not on it yet.
# Push to synapse, and push to the synapse.server
cat('Reading the current ui.R\n')
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
cat('Adding new id in the list\n')
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
# Update the synapse verion
cat('Push to synapse\n')
file <- File(ui@filePath, parentId = 'syn2145898')
file <- synStore(file)
# Copy the folder on the Shiny server & add the link in the wiki.
cat('Push to the shiny server\n')
system(sprintf("scp %s toShiny:~/ShinyApps/shinyCGHselectSample/", ui@filePath))
}
Profile
updateShiny(propertyValue(Profile, 'id'))
ui@filePath
file <- File(ui@filePath, parentId = 'syn2145898')
updateShiny <- function(synId){
# Load the ui.R from synapse
# Add the synId in the idsList if not on it yet.
# Push to synapse, and push to the synapse.server
cat('Reading the current ui.R\n')
ui <- synGet('syn2145898'); file.copy(ui@filePath, tempdir())
fConn <- file(ui@filePath, 'r+')
Lines <- readLines(fConn)
if(!grepl(synId, Lines[1])){
cat('Adding new id in the list\n')
newTag <- sprintf(', \"%s\")\n', synId)
L1 <- gsub(')', newTag, Lines[1])
writeLines(c(L1, Lines[-1]), con = fConn)
}
close(fConn)
# Update the synapse version: shiny folder is 'syn2145860'
cat('Push to synapse\n')
file <- File(ui@filePath, parentId = 'syn2145860')
file <- synStore(file)
# Copy the folder on the Shiny server & add the link in the wiki.
cat('Push to the shiny server\n')
system(sprintf("scp %s toShiny:~/ShinyApps/shinyCGHselectSample/", ui@filePath))
}
updateShiny(propertyValue(Profile, 'id'))
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
updateShiny(propertyValue(Profile, 'id'))
query <- synapseQuery("select id, name from entity where parentId == 'syn2116884'")
idList <- query$entity.id[grep('Profile', query$entity.name)]
idList
parentId <- 'syn2145860'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/shinyAppsCGH/shinyCGHselectSample/')
file <- File('./plotCGHselectSample_ui.R', parentId = parentId)
file <- synStore(file)
parentId <- 'syn2117484'
setwd('/Users/fredcommo/Documents/Projet_Safir/CGHObjectsSources/fromSynapse/')
file <- File('./fromSynapse_v2.R', parentId = parentId)
file <- synStore(file)
getDensity(object5)
q()
